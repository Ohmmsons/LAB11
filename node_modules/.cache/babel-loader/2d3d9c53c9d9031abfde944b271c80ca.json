{"remainingRequest":"C:\\xampp\\htdocs\\LAB11\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\LAB11\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\LAB11\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\xampp\\htdocs\\LAB11\\src\\store\\user.js","dependencies":[{"path":"C:\\xampp\\htdocs\\LAB11\\src\\store\\user.js","mtime":1670351005592},{"path":"C:\\xampp\\htdocs\\LAB11\\babel.config.js","mtime":1669803518612},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669803741763},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1669803738729},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\babel-loader\\lib\\index.js","mtime":1669803747522},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\eslint-loader\\index.js","mtime":1669803741583}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/xampp/htdocs/LAB11/src/store/user.js"],"names":["user","namespaced","state","tmp_user","getters","getUser","mutations","loginUser","logoutUser","tmpUser","actions","userExists","commit","fetch","email","method","response","json","data","console","log","alert","error","addUser","body","JSON","stringify","headers","password","session_id"],"mappings":"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","sourcesContent":["const user = {\r\n\tnamespaced: true,\r\n\tstate: {\r\n\t\tuser: {\r\n\t\t\t//\"id\":\"1\",\r\n\t\t\t//\"name\":\"Peter Kinget\",\r\n\t\t\t//\"email\":\"peter.kinget@gmail.com\",\r\n\t\t\t//\"session_id\":\"s47fcd7q4f2tm6rhdgfubn53ov\",\r\n\t\t},\r\n\t\ttmp_user:{\r\n\t\t\t//\"email\":\"abc@yahoo.com\"\r\n\t\t\t//\"name\":\"abc\"\r\n\t\t\t//\"password\":\"123456\"\r\n\t\t},\r\n\t},\r\n\tgetters: {\r\n\t\tgetUser (state) {\r\n\t\t\treturn state.user;\r\n\t\t},\r\n\t},\r\n\tmutations: {\r\n\t\tloginUser(state, user){\r\n\t\t\tstate.user = user\r\n\t\t},\r\n\t\tlogoutUser(state){\r\n\t\t\tstate.user = {}\r\n\t\t},\r\n\t\ttmpUser(state, user){\r\n\t\t\tstate.tmp_user = user\r\n\t\t},\r\n\t},\r\n\tactions: {\r\n\t\tasync userExists({commit}, user) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(`http://localhost/LAB11/api/users.php?email=${user.email}`, {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t})\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tconsole.log('userExists', data)\r\n\t\t\t\tif ( data !== null) {\r\n\t\t\t\t\talert('Email already exists')\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//remember temporary user\r\n\t\t\t\t\tcommit('tmpUser', user)\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\talert('Error: Database connection failed in phase 1')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync addUser({state}) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch('http://localhost/LAB11/api/users.php', {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tbody: JSON.stringify(state.tmp_user),\r\n\t\t\t\t\theaders: { 'Content-type': 'text/html; charset=UTF-8' },\r\n\t\t\t\t})\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tconsole.log('received data:', data)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\talert('Error: Database connection failed in phase 2')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync loginUser({commit}, user) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(`http://localhost/LAB11/api/users.php?email=${user.email}&password=${user.password}`)\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tif ( data == null) {\r\n\t\t\t\t\talert('Error: Wrong credentials')\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//add new user\r\n\t\t\t\t\tconsole.log('received data:', data)\r\n\t\t\t\t\tcommit('loginUser', data)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\talert('Error: Database connection failed')\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync logoutUser({commit},session_id) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(`http://localhost/LAB11/api/users.php?session_id=${session_id}`)\r\n\t\t\t\tconst data = await response.json()\r\n\t\t\t\tconsole.log('received data:',data)\r\n\t\t\t\tcommit('logoutUser')\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tcatch (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n}\r\nexport default\r\nuser"]}]}