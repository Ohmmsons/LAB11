{"remainingRequest":"C:\\xampp\\htdocs\\LAB11\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\LAB11\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\xampp\\htdocs\\LAB11\\src\\store\\user.js","dependencies":[{"path":"C:\\xampp\\htdocs\\LAB11\\src\\store\\user.js","mtime":1669803519213},{"path":"C:\\xampp\\htdocs\\LAB11\\babel.config.js","mtime":1669803518612},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669803741763},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\babel-loader\\lib\\index.js","mtime":1669803747522},{"path":"C:\\xampp\\htdocs\\LAB11\\node_modules\\eslint-loader\\index.js","mtime":1669803741583}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFx4YW1wcFxcaHRkb2NzXFxMQUIxMVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKdmFyIHVzZXIgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdXNlcjogey8vImlkIjoiMSIsCiAgICAgIC8vIm5hbWUiOiJQZXRlciBLaW5nZXQiLAogICAgICAvLyJlbWFpbCI6InBldGVyLmtpbmdldEBnbWFpbC5jb20iLCAKICAgICAgLy8ic2Vzc2lvbl9pZCI6InM0N2ZjZDdxNGYydG02cmhkZ2Z1Ym41M292IiwgICAKICAgIH0sCiAgICB0bXBfdXNlcjogey8vImVtYWlsIjoiYWJjQHlhaG9vLmNvbSIKICAgICAgLy8ibmFtZSI6ImFiYyIKICAgICAgLy8icGFzc3dvcmQiOiIxMjM0NTYiCQkJCiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRVc2VyOiBmdW5jdGlvbiBnZXRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBsb2dpblVzZXI6IGZ1bmN0aW9uIGxvZ2luVXNlcihzdGF0ZSwgdXNlcikgewogICAgICBzdGF0ZS51c2VyID0gdXNlcjsKICAgIH0sCiAgICBsb2dvdXRVc2VyOiBmdW5jdGlvbiBsb2dvdXRVc2VyKHN0YXRlKSB7CiAgICAgIHN0YXRlLnVzZXIgPSB7fTsKICAgIH0sCiAgICB0bXBVc2VyOiBmdW5jdGlvbiB0bXBVc2VyKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLnRtcF91c2VyID0gdXNlcjsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHVzZXJFeGlzdHM6IGZ1bmN0aW9uIHVzZXJFeGlzdHMoX3JlZiwgdXNlcikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2Rhdy5kZWVpLmZjdC51YWxnLnB0L35hMTIzNDUvTEFCMTEvYXBpL3VzZXJzLnBocD9lbWFpbD0iLmNvbmNhdCh1c2VyLmVtYWlsKSwgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd1c2VyRXhpc3RzJywgZGF0YSk7CgogICAgICAgICAgICAgICAgaWYgKCEoZGF0YSAhPT0gbnVsbCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBhbGVydCgnRW1haWwgYWxyZWFkeSBleGlzdHMnKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgLy9yZW1lbWJlciB0ZW1wb3JhcnkgdXNlcgogICAgICAgICAgICAgICAgY29tbWl0KCd0bXBVc2VyJywgdXNlcik7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICAgIGFsZXJ0KCdFcnJvcjogRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQgaW4gcGhhc2UgMScpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCAxOF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkVXNlcjogZnVuY3Rpb24gYWRkVXNlcihfcmVmMikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgc3RhdGUsIHJlc3BvbnNlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwOi8vZGF3LmRlZWkuZmN0LnVhbGcucHQvfmExMjM0NS9MQUIxMS9hcGkvdXNlcnMucGhwJywgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoc3RhdGUudG1wX3VzZXIpLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICd0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgnCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3JlY2VpdmVkIGRhdGE6JywgZGF0YSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwogICAgICAgICAgICAgICAgYWxlcnQoJ0Vycm9yOiBEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZCBpbiBwaGFzZSAyJyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDEyXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2dpblVzZXI6IGZ1bmN0aW9uIGxvZ2luVXNlcihfcmVmMywgdXNlcikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgY29tbWl0LCByZXNwb25zZSwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vZGF3LmRlZWkuZmN0LnVhbGcucHQvfmExMjM0NS9MQUIxMS9hcGkvdXNlcnMucGhwP2VtYWlsPSIuY29uY2F0KHVzZXIuZW1haWwsICImcGFzc3dvcmQ9IikuY29uY2F0KHVzZXIucGFzc3dvcmQpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShkYXRhID09IG51bGwpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGFsZXJ0KCdFcnJvcjogV3JvbmcgY3JlZGVudGlhbHMnKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICAvL2FkZCBuZXcgdXNlcgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3JlY2VpdmVkIGRhdGE6JywgZGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ2xvZ2luVXNlcicsIGRhdGEpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxODsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQzLnQwKTsKICAgICAgICAgICAgICAgIGFsZXJ0KCdFcnJvcjogRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQnKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMSwgMThdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ291dFVzZXI6IGZ1bmN0aW9uIGxvZ291dFVzZXIoX3JlZjQsIHNlc3Npb25faWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2UsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2Rhdy5kZWVpLmZjdC51YWxnLnB0L35hMTIzNDUvTEFCMTEvYXBpL3VzZXJzLnBocD9zZXNzaW9uX2lkPSIuY29uY2F0KHNlc3Npb25faWQpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdyZWNlaXZlZCBkYXRhOicsIGRhdGEpOwogICAgICAgICAgICAgICAgY29tbWl0KCdsb2dvdXRVc2VyJyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDEzOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDQudDApOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1sxLCAxM11dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB1c2VyOw=="},{"version":3,"sources":["C:/xampp/htdocs/LAB11/src/store/user.js"],"names":["user","namespaced","state","tmp_user","getters","getUser","mutations","loginUser","logoutUser","tmpUser","actions","userExists","commit","fetch","email","method","response","json","data","console","log","alert","error","addUser","body","JSON","stringify","headers","password","session_id"],"mappings":"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","sourcesContent":["const user = {\n    namespaced: true,\n    state: {\n        user: { \n        //\"id\":\"1\",\n        //\"name\":\"Peter Kinget\",\n        //\"email\":\"peter.kinget@gmail.com\", \n        //\"session_id\":\"s47fcd7q4f2tm6rhdgfubn53ov\",   \n        },\n        tmp_user:{\n\t\t//\"email\":\"abc@yahoo.com\"\n\t\t//\"name\":\"abc\"\n\t\t//\"password\":\"123456\"\t\t\t\n\t\t},\n    },\n    getters: {\n        getUser (state) {\n            return state.user;\n        },   \n    }, \n    mutations: {\n        loginUser(state, user){\n            state.user = user\n        },\n        logoutUser(state){\n            state.user = {}\n        },\n        tmpUser(state, user){\n            state.tmp_user = user\n        },           \n    },\n    actions: {\n        async userExists({commit}, user) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`http://daw.deei.fct.ualg.pt/~a12345/LAB11/api/users.php?email=${user.email}`, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t})\n                const data = await response.json()\n                console.log('userExists', data)\n\t\t\t\tif ( data !== null) {\n                    alert('Email already exists')\n                    return true\n                }\n                else {\n                    //remember temporary user\n                    commit('tmpUser', user)\n                    return false\n                }                   \n\t\t\t} \n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t\talert('Error: Database connection failed in phase 1')\n\t\t\t\treturn false\n\t\t\t}\n\t\t}, \n        async addUser({state}) {\n\t\t\ttry {\n                const response = await fetch('http://daw.deei.fct.ualg.pt/~a12345/LAB11/api/users.php', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify(state.tmp_user),\n\t\t\t\t\theaders: { 'Content-type': 'text/html; charset=UTF-8' },\n\t\t\t\t})\n\t\t\t\tconst data = await response.json()\n\t\t\t\tconsole.log('received data:', data)\n                return true\n\t\t\t} \n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t\talert('Error: Database connection failed in phase 2')\t\n\t\t\t\treturn false\t\t\t\n\t\t\t}\n\t\t},\n        async loginUser({commit}, user) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`http://daw.deei.fct.ualg.pt/~a12345/LAB11/api/users.php?email=${user.email}&password=${user.password}`)\n\t\t\t\tconst data = await response.json()\n\t\t\t\tif ( data == null) {\n\t\t\t\t\talert('Error: Wrong credentials')\n\t\t\t\t\treturn false\n                }\n                else {\n\t\t\t\t\t//add new user\n\t\t\t\t\tconsole.log('received data:', data)\n\t\t\t\t\tcommit('loginUser', data)\n                    return true\n                }\n\n\t\t\t} \n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t\talert('Error: Database connection failed')\t\n\t\t\t\treturn false\t\t\t\n\t\t\t}\n\t\t}, \n        async logoutUser({commit},session_id) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`http://daw.deei.fct.ualg.pt/~a12345/LAB11/api/users.php?session_id=${session_id}`)\n\t\t\t\tconst data = await response.json()\n                console.log('received data:',data)\n                commit('logoutUser')\n\t\t\t\treturn true\n\t\t\t} \n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t\treturn false\n\t\t\t}\n\t\t},   \n    }\n\n}\nexport default \n\tuser"]}]}